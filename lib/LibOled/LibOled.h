#ifndef LIB_OLED
#define LIB_OLED

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SH110X.h>

#define i2c_address 0x3c

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
#define OLED_RESET -1   //   QT-PY / XIAO

static const unsigned char epd_bitmap_1_preview_rev_1__1_ [] PROGMEM = {
	0xff, 0xff, 0xff, 0x80, 0xfc, 0x00, 0xff, 0x80, 0xf0, 0x00, 0x3f, 0x80, 0xe0, 0x00, 0x0f, 0x80, 
	0x80, 0x78, 0x07, 0x80, 0xc3, 0xff, 0x07, 0x80, 0xc7, 0xff, 0xcf, 0x80, 0xff, 0x01, 0xff, 0x80, 
	0xfc, 0x01, 0xff, 0x80, 0xf8, 0x03, 0x19, 0x80, 0xfc, 0x33, 0x01, 0x80, 0xfe, 0xff, 0x83, 0x80, 
	0xff, 0xff, 0xc3, 0x80, 0xff, 0xcf, 0x81, 0x80, 0xff, 0x87, 0x11, 0x80, 0xff, 0x87, 0x39, 0x80, 
	0xff, 0xc7, 0xff, 0x80, 0xff, 0xff, 0xff, 0x80
};

const unsigned char epd_bitmap_2__1_ [] PROGMEM = {
	0xff, 0xff, 0xff, 0x80, 0xff, 0x00, 0x7f, 0x80, 0xfc, 0x00, 0x1f, 0x80, 0xf0, 0x00, 0x07, 0x80, 
	0xe0, 0x7f, 0x03, 0x80, 0xc1, 0xff, 0xc1, 0x80, 0x83, 0xff, 0xf0, 0x80, 0x87, 0x80, 0xf8, 0x80, 
	0xcf, 0x00, 0x3d, 0x80, 0xfe, 0x00, 0x1f, 0x80, 0xfc, 0x1c, 0x0f, 0x80, 0xf8, 0x7f, 0x0f, 0x80, 
	0xfc, 0xff, 0x9f, 0x80, 0xff, 0xf7, 0xff, 0x80, 0xff, 0xe3, 0xff, 0x80, 0xff, 0xc1, 0xff, 0x80, 
	0xff, 0xc1, 0xff, 0x80, 0xff, 0xc1, 0xff, 0x80, 0xff, 0xe3, 0xff, 0x80, 0xff, 0xff, 0xff, 0x80
};

const unsigned char epd_bitmap_33 [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0xe0, 0x00, 0x00, 0x00, 
	0x00, 0x01, 0xc0, 0xe3, 0xff, 0xff, 0xff, 0xfe, 0x01, 0xc0, 0xe3, 0xff, 0xff, 0xff, 0xff, 0x01, 
	0xc0, 0xe3, 0xff, 0xfd, 0xff, 0xff, 0x01, 0xc0, 0xe3, 0xff, 0xf9, 0xff, 0xff, 0x29, 0xc0, 0xe3, 
	0xff, 0xf9, 0xff, 0xff, 0x7d, 0xc0, 0xe3, 0xff, 0xf8, 0xff, 0xff, 0x7d, 0xc0, 0xe3, 0xff, 0xf2, 
	0xff, 0xff, 0x6d, 0xc0, 0xe3, 0xff, 0xf6, 0xff, 0xff, 0x01, 0xc0, 0xe3, 0xff, 0xf6, 0x7f, 0xff, 
	0x6d, 0xc0, 0xe3, 0xff, 0x37, 0x79, 0xff, 0x7d, 0xc0, 0xe3, 0xfe, 0x4f, 0x79, 0xff, 0x7d, 0xc0, 
	0xe3, 0x00, 0xef, 0x78, 0x03, 0x09, 0xc0, 0xe3, 0xff, 0xff, 0x3b, 0xff, 0x01, 0xc0, 0xe3, 0xff, 
	0xff, 0xb3, 0xff, 0x01, 0xc0, 0xe3, 0xff, 0xff, 0xb7, 0xff, 0x01, 0xc0, 0xe3, 0xff, 0xff, 0xb7, 
	0xff, 0x39, 0xc0, 0xe3, 0xff, 0xff, 0x97, 0xff, 0x7d, 0xc0, 0xe3, 0xff, 0xff, 0xc7, 0xff, 0x7d, 
	0xc0, 0xe3, 0xff, 0xff, 0xcf, 0xff, 0x7d, 0xc0, 0xe3, 0xff, 0xff, 0xcf, 0xff, 0x11, 0xc0, 0xe3, 
	0xff, 0xff, 0xcf, 0xff, 0x01, 0xc0, 0xe3, 0xff, 0xff, 0xff, 0xff, 0x01, 0xc0, 0xe3, 0xff, 0xff, 
	0xff, 0xfe, 0x01, 0xc0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0xe0, 0x00, 0x00, 0x00, 0x00, 
	0x01, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0
};
//25-21
const unsigned char heartRate_Live [] PROGMEM = {
	0xff, 0xff, 0xff, 0x80, 0xf8, 0x1c, 0x0f, 0x80, 0xf1, 0xc1, 0xe7, 0x80, 0xe7, 0xf3, 0xf3, 0x80, 
	0xef, 0xff, 0xf9, 0x80, 0xcf, 0xff, 0xfd, 0x80, 0xcf, 0xf3, 0xfc, 0x80, 0xcf, 0xf3, 0xfc, 0x80, 
	0xcf, 0x61, 0xfd, 0x80, 0xcf, 0x21, 0xfd, 0x80, 0xc0, 0x0c, 0x39, 0x80, 0xc0, 0xce, 0x33, 0x80, 
	0xff, 0xdf, 0xf7, 0x80, 0xf9, 0xff, 0xe7, 0x80, 0xfc, 0xff, 0xcf, 0x80, 0xfe, 0x7f, 0x1f, 0x80, 
	0xff, 0x3e, 0x7f, 0x80, 0xff, 0x8c, 0xff, 0x80, 0xff, 0xe1, 0xff, 0x80, 0xff, 0xf7, 0xff, 0x80, 
	0xff, 0xff, 0xff, 0x80
};
//25-24
const unsigned char heartRate_Die [] PROGMEM = {
	0xff, 0xc1, 0xff, 0x80, 0xfe, 0x00, 0x3f, 0x80, 0xfc, 0x7f, 0x1f, 0x80, 0xf9, 0xff, 0xc7, 0x80, 
	0xf3, 0xff, 0xe7, 0x80, 0xe7, 0xff, 0xf3, 0x80, 0xcf, 0xff, 0xf9, 0x80, 0xcf, 0xff, 0xfd, 0x80, 
	0xdd, 0x7f, 0x4c, 0x80, 0x9c, 0x7f, 0x1c, 0x80, 0x9c, 0x7f, 0x1c, 0x80, 0x9d, 0x7f, 0x4c, 0x80, 
	0x9f, 0xff, 0xfc, 0x80, 0x9f, 0xff, 0xfc, 0x80, 0x9f, 0xff, 0xfc, 0x80, 0xdf, 0xf7, 0xfc, 0x80, 
	0xcf, 0xc1, 0xf9, 0x80, 0xef, 0x9c, 0xf9, 0x80, 0xe7, 0xbe, 0xf3, 0x80, 0xf3, 0xff, 0xe7, 0x80, 
	0xf8, 0xff, 0xcf, 0x80, 0xfc, 0x3e, 0x1f, 0x80, 0xff, 0x00, 0x7f, 0x80, 0xff, 0xe3, 0xff, 0x80
};
//25-24
const unsigned char rtc [] PROGMEM = {
	0xff, 0xc1, 0xff, 0x80, 0xfe, 0x00, 0x3f, 0x80, 0xfc, 0x00, 0x1f, 0x80, 0xf0, 0xf7, 0x0f, 0x80, 
	0xe1, 0xf7, 0xc7, 0x80, 0xe3, 0xff, 0xe3, 0x80, 0xc7, 0xff, 0xf1, 0x80, 0xcf, 0xff, 0xf9, 0x80, 
	0x8f, 0xff, 0xf8, 0x80, 0x9d, 0xff, 0x98, 0x80, 0x9c, 0x3e, 0x1c, 0x80, 0x87, 0x00, 0xf0, 0x80, 
	0x87, 0xe3, 0xf0, 0x80, 0x9f, 0xf7, 0xfc, 0x80, 0x9f, 0xff, 0xf8, 0x80, 0x8f, 0xff, 0xf8, 0x80, 
	0xcf, 0xff, 0xf9, 0x80, 0xc7, 0xff, 0xf1, 0x80, 0xe3, 0xff, 0xe3, 0x80, 0xe1, 0xf7, 0xc7, 0x80, 
	0xf0, 0xf7, 0x0f, 0x80, 0xfc, 0x00, 0x1f, 0x80, 0xfe, 0x00, 0x3f, 0x80, 0xff, 0xc1, 0xff, 0x80
};

class LibOled
{
private:
    /* data */
    Adafruit_SH1106G display = Adafruit_SH1106G(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
public:
    LibOled();
    
    void begin();

    void intro();
    void connectWifi();
    void connectingWifi();
    void deleteDisplay();

    void screenHeartRate();

    void printHeatRate(uint8_t textSize,uint8_t x, uint8_t y, uint16_t lastValue, uint16_t newValue);
    void printTemperature(uint8_t textSize,uint8_t x, uint8_t y, uint16_t lastValue, uint16_t newValue);

    void printRTC(uint8_t textSize,uint8_t x, uint8_t y, uint16_t lastValue, uint16_t newValue);
};


#endif